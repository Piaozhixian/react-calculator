{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["initialState","num1","num2","notation","result","Board","props","state","handleClick","bind","i","console","log","this","isNaN","Number","setState","num","String","Button","value","onClick","className","Formula","Result","renderButton","React","Component","str","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e7eec58.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Calculator\n        </p>\n      </header>\n       <div className=\"calculator\">\n         <Board/>\n        </div>\n    </div>\n  );\n}\n\nconst initialState = {\n  num1: null,\n  num2: null,\n  notation: null,\n  result: null,\n};\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(i) {\n    console.log(this.state);\n\n    if(isNaN(Number(i))) {\n      //When i is not a number\n      var result = 0\n      if(this.state.result != null) {\n        //If the last result exists, reset state\n        this.setState({num1: this.state.result});\n      }\n\n      if(i === \"=\") {\n        if(this.state.notation === \"+\") {\n          result = Number(this.state.num1) + Number(this.state.num2)\n        } else if(this.state.notation === \"-\") {\n          result = Number(this.state.num1) - Number(this.state.num2)\n        } else if(this.state.notation === \"*\") {\n          result = Number(this.state.num1) * Number(this.state.num2)\n        } else if(this.state.notation === \"/\") {\n          result = Number(this.state.num1) / Number(this.state.num2)\n        }\n        this.setState({result: result, num1: null, num2: null, notation: null})\n      } else {\n        if(this.state.notation == null) {\n          this.setState({notation: i})\n        } else {\n          this.setState({result: result})\n        }\n      }\n\n    } else {\n      //When i is a number\n      if(this.state.result != null) {\n        //If the last result exists, reset state\n        this.setState({result: null});\n      }\n      if(this.state.notation == null) {\n        var num = this.state.num1 == null ? \"\" : this.state.num1\n        num += String(i)\n        this.setState({num1: num})\n      } else {\n        var num = this.state.num2 == null ? \"\" : this.state.num2\n        num += String(i)\n        this.setState({num2: num})\n      }\n    }\n  }\n\n  renderButton(i) {\n    return (\n      <Button value={i} onClick={() => this.handleClick(i)} />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"display-panel\">\n          <Formula num1={this.state.num1} notation={this.state.notation} num2={this.state.num2}/>\n          <Result result={this.state.result} />\n        </div>\n        <div className=\"button-panel\">\n          <div className=\"button-row\">\n            {this.renderButton(1)}\n            {this.renderButton(2)}\n            {this.renderButton(3)}\n            {this.renderButton('+')}\n          </div>\n          <div className=\"button-row\">\n            {this.renderButton(4)}\n            {this.renderButton(5)}\n            {this.renderButton(6)}\n            {this.renderButton('-')}\n          </div>\n          <div className=\"button-row\">\n            {this.renderButton(7)}\n            {this.renderButton(8)}\n            {this.renderButton(9)}\n            {this.renderButton('*')}\n          </div>\n          <div className=\"button-row\">\n            {this.renderButton(0)}\n            {this.renderButton('‚Üê')}\n            {this.renderButton('=')}\n            {this.renderButton('/')}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Formula(props) {\n  var str = \"\";\n  if(props.num1 != null) {\n    str += props.num1\n  }\n  if(props.notation != null) {\n    str += props.notation\n  }\n  if(props.num2 != null) {\n    str += props.num2\n  }\n  return (\n    <div>\n      <p>{str}</p>\n    </div>\n  );\n}\n\nfunction Result(props) {\n  return (\n    <div>\n      <h5>{props.result}</h5>\n    </div>\n  );\n}\n\nfunction Button(props) {\n  return (\n    <button className=\"button\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}